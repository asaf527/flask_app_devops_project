name: Set up EKS with Terraform

on: push

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

jobs:
  LogInToAWS:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
  
  CheckAndCreateS3Bucket:
    runs-on: ubuntu-latest
    needs: LogInToAWS
    steps:
      - name: Check if bucket exists
        run: |
          if ! aws s3api head-bucket --bucket regtech-iac 2>/dev/null; then
            echo "Bucket does not exist. Creating..."
            aws s3api create-bucket \
              --bucket regtech-iac \
              --region ${{ env.AWS_REGION }}
            
            # Enable versioning for the new bucket
            aws s3api put-bucket-versioning \
              --bucket regtech-iac \
              --versioning-configuration Status=Enabled
            
            echo "Bucket created successfully"
          else
            echo "Bucket already exists. Skipping creation."
          fi

  TerraformInit:
    runs-on: ubuntu-latest
    needs: LogInToAWS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

  TerraformPlan:
    runs-on: ubuntu-latest
    needs: TerraformInit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

  TerraformApply:
    runs-on: ubuntu-latest
    needs: TerraformPlan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Apply Terraform configuration
        working-directory: ./terraform
        run: terraform apply -auto-approve